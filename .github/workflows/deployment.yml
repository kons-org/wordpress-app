name: Deploy Wordpress App
on:
  workflow_run:
    workflows: [Build Wordpress Container]
    types:
      - completed
jobs:
  change_image_tag:
    runs-on: self-hosted
    permissions:
      actions: read
    steps:
      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: image_tag
          github-token: ${{ secrets.GITHUB_TOKEN }}
          run-id: ${{ github.event.workflow_run.id }}
      - name: Extract Image Tag from Artifact
        run: echo "IMAGE_TAG=$(cat image_tag.txt)" >> $GITHUB_ENV
      - name: Get code from deployment repository
        uses: actions/checkout@v4
        with: 
          repository: 'konbusalov/wordpress-app-deployment'
          path: 'deployment_repo'
          token: ${{ secrets.BOT_TOKEN }}
          persist-credentials: true
      - name: Edit docker-compose.yml
        run: |
          echo "The image tag is: $IMAGE_TAG"
          cd deployment_repo
          sed -i -E "s#(image: 363174885355.dkr.ecr.eu-north-1.amazonaws.com/wordpress-app:)[0-9]+#\1$IMAGE_TAG#" docker-compose.yml
          git add docker-compose.yml
          git status --porcelain | wc -l
          if [[ $(git status --porcelain | wc -l) -gt 0 ]]; then
            git config --global user.name "Deployment [bot]"
            git config --global user.email "konbusalov@gmail.com"
            git commit -m "Updated docker-compose.yml image tag to $IMAGE_TAG"
            git push
          else 
            echo "No changes to commit"
          fi

  deploy:
    runs-on: self-hosted
    needs: change_image_tag
    steps:
      - name: Write SSH Private Key to File 
        run: |
          mkdir -p ~/.ssh
          echo "${{secrets.SSH_PRIVATE_KEY}}" > ~/.ssh/private_key.pem
          chmod 400 ~/.ssh/private_key.pem
      - name: Add Server into known_hosts
        run: |
          ssh-keyscan 13.49.212.246 >> ~/.ssh/known_hosts
          chmod 644 ~/.ssh/known_hosts
      - name: SSH and Deploy on Server
        run: |
          ssh -i ~/.ssh/private_key.pem ubuntu@13.49.212.246 << 'EOF'
            cd deployment
            git pull origin master
            docker-compose down
            docker system prune -a -f
            docker-compose up -d
          EOF

